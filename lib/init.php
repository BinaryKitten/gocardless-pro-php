<?php
#
# WARNING: Do not edit by hand, this file was generated by Crank:
#
#   https://github.com/gocardless/crank
#

namespace {{ .Config.module_name }};

{{ $require_base := Base .Config.gem_path }}

$version_file = '{{ $require_base }}/version.php';
if (file_exists($version_file)) {
  require_once($version_file);
}

require_once '{{ $require_base }}/core/client.php';
require_once '{{ $require_base }}/core/errors.php';
require_once '{{ $require_base }}/core/paginator.php';
require_once '{{ $require_base }}/core/authenticator.php';
require_once '{{ $require_base }}/core/request.php';
require_once '{{ $require_base }}/core/response.php';

require_once '{{ $require_base }}/resources/base.php';
{{ range $propName, $propDetails := .Schema.Properties }}require_once '{{ $require_base }}/resources/{{ $propName }}.php';
{{ end }}

class \GoCardless {
  public static $client;
  public static function connect($username, $password, $base = 'https://api-sandbox.gocardless.com/', $options = array()) {
    self::$client = new Client(new Authenticator($username, $password), $base, $options);
    return self::$client;
  }
  public static function client() {
    if (!isset(self::$client)) {
      throw new ClientUsageError('Connection needed before accessing the client');
    }
    return self::$client;
  }
}
