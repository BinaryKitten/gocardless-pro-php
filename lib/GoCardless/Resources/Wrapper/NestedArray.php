<?php
/**
  * WARNING: Do not edit by hand, this file was generated by Crank:
  *
  * https://github.com/gocardless/crank
  */

namespace GoCardless\Resources\Wrapper;

/**
  * NestedObject shim. Allows one to get properties of a nested object using
  * dynamic getter methods.
  * @author Iain Nash
  * @package GoCardless
  * @subpackage \Resources\Wrapper
  */
class NestedArray extends \ArrayObject
{
	/** @var string Property name the nested object encloses */
	private $name;
	/** @var array[mixed] Property values the nested object encloses */
	private $data;

	/**
	  * @param string $name The property name that this object describes.
	  * @param mixed $data The data contained in this object.
	  */
	public function __construct($name, $data)
	{
		foreach ($data as $key => $data_element) {
			if (is_array($data_element)) {
				$data[$key] = new NestedArray($name, $data_element);
			} else if (is_object($data_element)) {
				$data[$key] = new NestedObject($name, $data_element);
			}
		}
		$this->name = $name;
		$this->data = $data;
		parent::__construct($this->data);
	}

	/**
	  * Returns a string representation of the data contained within the getter method.
	  * @return string
	  */
	public function __toString()
	{
		return $this->name . ' ' . print_r($this->data, true);
	}

	/**
	  *	Get all this object's keys
	  *
	  * @return mixed[]
	  */
	public function keys()
	{
		return get_object_vars($this->data);
	}
}
