<?php
/**
  * WARNING: Do not edit by hand, this file was generated by Crank:
  *
  * https://github.com/gocardless/crank
  */

namespace GoCardless\Resources;

/**
  * Customer objects hold the contact details for a customer. A customer can
  * have several [customer bank
  * accounts](https://developer.gocardless.com/pro/#api-endpoints-customer-bank-accounts),
  * which in turn can have several Direct Debit
  * [mandates](https://developer.gocardless.com/pro/#api-endpoints-mandates).
  */
class Customer
{

    private $data;
    private $response;

  /**
    * Creates a new Resource from a http response passing in the data.
    * @param stdClass $data Data coming into the resource.
    * @param Response $response \<no value>\Core\Response object.
    */
    public function __construct($data, $response = null)
    {
        // Don't blow up with blank data anymore for raw responses.
        if ($data === null) {
            $data = new \stdClass();
        }
        $this->response = $response;
        $this->data = $data;
    }


  /**
    * The first line of the customer's address.
    *
    * @return string
    */
    public function address_line1()
    {
        $field = 'address_line1';
        if (!property_exists($this->data, $field)) {
          return null;
        }
        return $this->data->{$field};
    }

  /**
    * The second line of the customer's address.
    *
    * @return string
    */
    public function address_line2()
    {
        $field = 'address_line2';
        if (!property_exists($this->data, $field)) {
          return null;
        }
        return $this->data->{$field};
    }

  /**
    * The third line of the customer's address.
    *
    * @return string
    */
    public function address_line3()
    {
        $field = 'address_line3';
        if (!property_exists($this->data, $field)) {
          return null;
        }
        return $this->data->{$field};
    }

  /**
    * The city of the customer's address.
    *
    * @return string
    */
    public function city()
    {
        $field = 'city';
        if (!property_exists($this->data, $field)) {
          return null;
        }
        return $this->data->{$field};
    }

  /**
    * [ISO
    * 3166-1](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements)
    * alpha-2 code.
    *
    * @return string
    */
    public function country_code()
    {
        $field = 'country_code';
        if (!property_exists($this->data, $field)) {
          return null;
        }
        return $this->data->{$field};
    }

  /**
    * Fixed
    * [timestamp](https://developer.gocardless.com/pro/#overview-time-zones-dates),
    * recording when this resource was created.
    *
    * @return string
    */
    public function created_at()
    {
        $field = 'created_at';
        if (!property_exists($this->data, $field)) {
          return null;
        }
        return $this->data->{$field};
    }

  /**
    * Customer's email address.
    *
    * @return string
    */
    public function email()
    {
        $field = 'email';
        if (!property_exists($this->data, $field)) {
          return null;
        }
        return $this->data->{$field};
    }

  /**
    * Customer's surname.
    *
    * @return string
    */
    public function family_name()
    {
        $field = 'family_name';
        if (!property_exists($this->data, $field)) {
          return null;
        }
        return $this->data->{$field};
    }

  /**
    * Customer's first name.
    *
    * @return string
    */
    public function given_name()
    {
        $field = 'given_name';
        if (!property_exists($this->data, $field)) {
          return null;
        }
        return $this->data->{$field};
    }

  /**
    * Unique identifier, beginning with "CU".
    *
    * @return string
    */
    public function id()
    {
        $field = 'id';
        if (!property_exists($this->data, $field)) {
          return null;
        }
        return $this->data->{$field};
    }

  /**
    * Key-value store of custom data. Up to 3 keys are permitted, with key names
    * up to 50 characters and values up to 200 characters.
    *
    * @return array[string]string
    */
    public function metadata()
    {
        $field = 'metadata';
        if (!property_exists($this->data, $field)) {
          return null;
        }
        return $this->data->{$field};
    }

  /**
    * The customer's postal code.
    *
    * @return string
    */
    public function postal_code()
    {
        $field = 'postal_code';
        if (!property_exists($this->data, $field)) {
          return null;
        }
        return $this->data->{$field};
    }

  /**
    * The customer's address region, county or department.
    *
    * @return string
    */
    public function region()
    {
        $field = 'region';
        if (!property_exists($this->data, $field)) {
          return null;
        }
        return $this->data->{$field};
    }



  /**
    * Get the response object.
    * @return \GoCardless\Core\Response
    */
    public function response()
    {
        return $this->response;
    }

  /**
    * Returns a string representation of the project.
    * @return string 
    */
    public function __toString()
    {
        $ret = 'Customer Class (';
        $ret .= print_r($this->data, true);
        return $ret;
    }
}
