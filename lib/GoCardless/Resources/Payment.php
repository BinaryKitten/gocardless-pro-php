<?php

/**
  * WARNING: Do not edit by hand, this file was generated by Crank:
  *
  * https://github.com/gocardless/crank
  */

namespace GoCardless\Resources;

/**
  *  Payment objects represent payments from a
  *  [customer](https://developer.gocardless.com/pro/#api-endpoints-customers)
  *  to a
  *  [creditor](https://developer.gocardless.com/pro/#api-endpoints-creditors),
  *  taken against a Direct Debit
  *  [mandate](https://developer.gocardless.com/pro/#api-endpoints-mandates).
 
  *  *  
  *  GoCardless will notify you via a
  *  [webhook](https://developer.gocardless.com/pro/#webhooks) whenever the
  *  state of a payment changes.
  */
class Payment
{
  
    
    private $data;
    private $response;

    public function __construct($data, $response = null)
    {
      if ($data === null)
      {
        throw new \Exception('Data cannot be null');
      }
      $this->response = $response;
      $this->data = $data;
    }
  
    
    
    public function amount()
    {
      return $this->data->amount;
    }
  
    
    public function amount_refunded()
    {
      return $this->data->amount_refunded;
    }
  
    
    public function charge_date()
    {
      return $this->data->charge_date;
    }
  
    
    public function created_at()
    {
      return $this->data->created_at;
    }
  
    
    public function currency()
    {
      return $this->data->currency;
    }
  
    
    public function description()
    {
      return $this->data->description;
    }
  
    
    public function id()
    {
      return $this->data->id;
    }
  
    
    public function links()
    {
      return $this->data->links;
    }
  
    
    public function metadata()
    {
      return $this->data->metadata;
    }
  
    
    public function reference()
    {
      return $this->data->reference;
    }
  
    
    public function status()
    {
      return $this->data->status;
    }
  
    
    public function response() {
      return $this->response;
    }


}
