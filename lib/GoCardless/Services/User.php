<?php

/**
  * WARNING: Do not edit by hand, this file was generated by Crank:
  *
  * https://github.com/gocardless/crank
  */

namespace GoCardless\Services;



/**
  *  
  */
class User extends Base
{
  
  /**
    *  <a name="user_exists"></a>Creates a new user object. Email addresses must
    *  be unique.
    *
    *  Example URL: /users
    **/
    
    public function docreate($options = array())
    {

      return $this->makeRequest("post", "/users", $options);
    }

  /**
    *  Returns a
    *  [cursor-paginated](https://developer.gocardless.com/pro/#overview-cursor-pagination)
    *  list of your users.
    *
    *  Example URL: /users
    **/
    
    public function dolist($options = array())
    {

      return $this->makeRequest("get", "/users", $options);
    }

  /**
    *  Retrieves the details of an existing user. In addition to the usual
    *  permissions based access rules, any user can access their own record.
    *
    *  Example URL: /users/:identity
    *  
    *  @param identity:  Unique identifier, beginning with "US"
    **/
    
    public function doget($identity, $options = array())
    {

      $path = $this->subUrl("/users/%v", array(
        "identity" => $identity
      ));

      return $this->makeRequest("get", $path, $options);
    }

  /**
    *  Updates a user object. Supports all of the fields supported when creating
    *  a user.
    *
    *  Example URL: /users/:identity
    *  
    *  @param identity:  Unique identifier, beginning with "US"
    **/
    
    public function doupdate($identity, $options = array())
    {

      $path = $this->subUrl("/users/%v", array(
        "identity" => $identity
      ));

      return $this->makeRequest("put", $path, $options);
    }

  /**
    *  Enables a user
    *
    *  Example URL: /users/:identity/actions/enable
    *  
    *  @param identity:  Unique identifier, beginning with "US"
    **/
    
    public function doenable($identity, $options = array())
    {

      $path = $this->subUrl("/users/%v/actions/enable", array(
        "identity" => $identity
      ));

      return $this->makeRequest("post", $path, $options);
    }

  /**
    *  Disables a user
    *
    *  Example URL: /users/:identity/actions/disable
    *  
    *  @param identity:  Unique identifier, beginning with "US"
    **/
    
    public function dodisable($identity, $options = array())
    {

      $path = $this->subUrl("/users/%v/actions/disable", array(
        "identity" => $identity
      ));

      return $this->makeRequest("post", $path, $options);
    }



   protected function resourceClass() {
     return '\GoCardless\Resources\User';
   }

  /**
    *  Get the key the response object is enclosed in in JSON.
    */
    protected function envelopeKey()
    {
      return "users";
    }

}
