<?php
/**
  * WARNING: Do not edit by hand, this file was generated by Crank:
  *
  * https://github.com/gocardless/crank
  */

namespace GoCardless\Services;

/**
  *  Each
  *  [payment](https://developer.gocardless.com/pro/#api-endpoints-payments)
  *  taken through the API is linked to a "creditor", to whom the payment is
  *  then paid out. In most cases your organisation will have a single
  *  "creditor", but the API also supports collecting payments on behalf of
  *  others.
  *  
  *  Please get in touch if you wish to use this endpoint.
  *  Currently, for Anti Money Laundering reasons, any creditors you add must be
  *  directly related to your organisation.
  */
class Creditor extends Base
{
  
  /**
    *  Creates a new creditor.
    *
    *  Example URL: /creditors
    *  @return Creditor
    **/
    public function create($params = array(), $headers = array())
    {
        return $this->makeRequest('post', '/creditors', $params);
    }

  /**
    *  Returns a
    *  [cursor-paginated](https://developer.gocardless.com/pro/#overview-cursor-pagination)
    *  list of your creditors.
    *
    *  Example URL: /creditors
    *  @return ListResponse
    **/
    public function do_list($params = array(), $headers = array())
    {
        return $this->makeRequest('get', '/creditors', $params);
    }

  /**
    *  Retrieves the details of an existing creditor.
    *
    *  Example URL: /creditors/:identity
    *
    *  @param identity:  Unique identifier, beginning with "CR".
    *  @return Creditor
    **/
    public function get($identity, $params = array(), $headers = array())
    {
        $path = $this->subUrl('/creditors/:identity', array(
            'identity' => $identity
        ));

        return $this->makeRequest('get', $path, $params, $headers);
    }

  /**
    *  Updates a creditor object. Supports all of the fields supported when
    *  creating a creditor.
    *
    *  Example URL: /creditors/:identity
    *
    *  @param identity:  Unique identifier, beginning with "CR".
    *  @return Creditor
    **/
    public function update($identity, $params = array(), $headers = array())
    {
        $path = $this->subUrl('/creditors/:identity', array(
            'identity' => $identity
        ));

        return $this->makeRequest('put', $path, $params, $headers);
    }



  /**
    *  Returns a
    *  [cursor-paginated](https://developer.gocardless.com/pro/#overview-cursor-pagination)
    *  list of your creditors.
    *
    *  Example URL: /creditors\
    *  @return Paginator
    **/
    public function all($listMax, $options = array())
    {
        return new Paginator($this, $listMax, $this->do_list($options), $options);
    }


   /**
    * Get the resource loading class.
    * Used internally to send http requests.
    *
    * @return string
    */
    protected function resourceClass()
    {
        return '\GoCardless\Resources\Creditor';
    }

  /**
    *  Get the key the response object is enclosed in in JSON.
    *  Used internally to wrap and unwrap http requests.
    *
    *  @return string
    */
    protected function envelopeKey()
    {
        return 'creditors';
    }
}
