<?php

/**
  * WARNING: Do not edit by hand, this file was generated by Crank:
  *
  * https://github.com/gocardless/crank
  */

namespace GoCardless\Services;



/**
  *  Each
  *  [payment](https://developer.gocardless.com/pro/#api-endpoints-payments)
  *  taken through the API is linked to a "creditor", to whom the payment is
  *  then paid out. In most cases your organisation will have a single
  *  "creditor", but the API also supports collecting payments on behalf of
  *  others.
  *  
  *  Please get in touch if you wish to use this endpoint.
  *  Currently, for Anti Money Laundering reasons, any creditors you add must be
  *  directly related to your organisation.
  */
class Creditor extends Base
{
  
  /**
    *  Creates a new creditor.
    *
    *  Example URL: /creditors
    **/
    
    public function docreate($options = array())
    {

      return $this->makeRequest("post", "/creditors", $options);
    }

  /**
    *  Returns a
    *  [cursor-paginated](https://developer.gocardless.com/pro/#overview-cursor-pagination)
    *  list of your creditors.
    *
    *  Example URL: /creditors
    **/
    
    public function dolist($options = array())
    {

      return $this->makeRequest("get", "/creditors", $options);
    }

  /**
    *  Retrieves the details of an existing creditor.
    *
    *  Example URL: /creditors/:identity
    *  
    *  @param identity:  Unique identifier, beginning with "CR".
    **/
    
    public function doget($identity, $options = array())
    {

      $path = $this->subUrl("/creditors/%v", array(
        "identity" => $identity
      ));

      return $this->makeRequest("get", $path, $options);
    }

  /**
    *  Updates a creditor object. Supports all of the fields supported when
    *  creating a creditor.
    *
    *  Example URL: /creditors/:identity
    *  
    *  @param identity:  Unique identifier, beginning with "CR".
    **/
    
    public function doupdate($identity, $options = array())
    {

      $path = $this->subUrl("/creditors/%v", array(
        "identity" => $identity
      ));

      return $this->makeRequest("put", $path, $options);
    }



   protected function resourceClass() {
     return '\GoCardless\Resources\Creditor';
   }

  /**
    *  Get the key the response object is enclosed in in JSON.
    */
    protected function envelopeKey()
    {
      return "creditors";
    }

}
