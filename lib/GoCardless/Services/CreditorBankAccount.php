<?php

/**
  * WARNING: Do not edit by hand, this file was generated by Crank:
  *
  * https://github.com/gocardless/crank
  */

namespace GoCardless\Services;



/**
  *  Creditor Bank Accounts hold the bank details of a
  *  [creditor](https://developer.gocardless.com/pro/#api-endpoints-creditor).
  *  These are the bank accounts which your
  *  [payouts](https://developer.gocardless.com/pro/#api-endpoints-payouts) will
  *  be sent to.
  *  
  *  Note that creditor bank accounts must be unique, and
  *  so you will encounter a `bank_account_exists` error if you try to create a
  *  duplicate bank account. You may wish to handle this by updating the
  *  existing record instead, the ID of which will be provided as
  *  `links[creditor_bank_account]` in the error response.
  */
class CreditorBankAccount extends Base
{
  
  /**
    *  Creates a new creditor bank account object.
    *  
    *  Bank account
    *  details may be supplied using the IBAN (international bank account
    *  number) or [local details](#ui-compliance-local-bank-details).
    *
    *  Example URL: /creditor_bank_accounts
    **/
    
    public function docreate($options = array())
    {

      return $this->makeRequest("post", "/creditor_bank_accounts", $options);
    }

  /**
    *  Returns a
    *  [cursor-paginated](https://developer.gocardless.com/pro/#overview-cursor-pagination)
    *  list of your creditor bank accounts.
    *
    *  Example URL: /creditor_bank_accounts
    **/
    
    public function dolist($options = array())
    {

      return $this->makeRequest("get", "/creditor_bank_accounts", $options);
    }

  /**
    *  Retrieves the details of an existing creditor bank account.
    *
    *  Example URL: /creditor_bank_accounts/:identity
    *  
    *  @param identity:  Unique identifier, beginning with "BA"
    **/
    
    public function doget($identity, $options = array())
    {

      $path = $this->subUrl("/creditor_bank_accounts/%v", array(
        "identity" => $identity
      ));

      return $this->makeRequest("get", $path, $options);
    }

  /**
    *  Immediately disables the bank account, no money can be paid out to a
    *  disabled account.
    *  
    *  This will return a `disable_failed`
    *  error if the bank account has already been disabled.
    *  
    *  A
    *  disabled bank account can be re-enabled by creating a new bank account
    *  resource with the same details.
    *
    *  Example URL: /creditor_bank_accounts/:identity/actions/disable
    *  
    *  @param identity:  Unique identifier, beginning with "BA"
    **/
    
    public function dodisable($identity, $options = array())
    {

      $path = $this->subUrl("/creditor_bank_accounts/%v/actions/disable", array(
        "identity" => $identity
      ));

      return $this->makeRequest("post", $path, $options);
    }



   protected function resourceClass() {
     return '\GoCardless\Resources\CreditorBankAccount';
   }

  /**
    *  Get the key the response object is enclosed in in JSON.
    */
    protected function envelopeKey()
    {
      return "creditor_bank_accounts";
    }

}
