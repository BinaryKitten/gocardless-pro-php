<?php
/**
  * WARNING: Do not edit by hand, this file was generated by Crank:
  *
  * https://github.com/gocardless/crank
  */

namespace GoCardless\Services;

/**
  *  Payouts represent transfers from GoCardless to a
  *  [creditor](https://developer.gocardless.com/pro/#api-endpoints-creditors).
  *  Each payout contains the funds collected from one or many
  *  [payments](https://developer.gocardless.com/pro/#api-endpoints-payments).
  *  Payouts are created automatically after a payment has been successfully
  *  collected.
  */
class Payout extends Base
{
  
  /**
    *  Returns a
    *  [cursor-paginated](https://developer.gocardless.com/pro/#overview-cursor-pagination)
    *  list of your payouts.
    *
    *  Example URL: /payouts
    *  @return ListResponse
    **/
    public function do_list($options = array())
    {
        return $this->makeRequest('get', '/payouts', $options);
    }

  /**
    *  Retrieves the details of a single payout.
    *
    *  Example URL: /payouts/:identity
    *
    *  @param identity:  Unique identifier, beginning with "PO"
    *  @return Payout
    **/
    public function get($identity, $options = array())
    {
        $path = $this->subUrl('/payouts/:identity', array(
            'identity' => $identity
        ));

        return $this->makeRequest('get', $path, $options);
    }



  /**
    *  Returns a
    *  [cursor-paginated](https://developer.gocardless.com/pro/#overview-cursor-pagination)
    *  list of your payouts.
    *
    *  Example URL: /payouts\
    *  @return Paginator
    **/
    public function all($listMax, $options = array())
    {
        return new Paginator($this, $listMax, $this->do_list($options), $options);
    }


   /**
    * Get the resource loading class.
    * Used internally to send http requests.
    *
    * @return string
    */
    protected function resourceClass()
    {
        return '\GoCardless\Resources\Payout';
    }

  /**
    *  Get the key the response object is enclosed in in JSON.
    *  Used internally to wrap and unwrap http requests.
    *
    *  @return string
    */
    protected function envelopeKey()
    {
        return 'payouts';
    }
}
