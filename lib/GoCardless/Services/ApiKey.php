<?php
/**
  * WARNING: Do not edit by hand, this file was generated by Crank:
  *
  * https://github.com/gocardless/crank
  */

namespace GoCardless\Services;

/**
  *  <a name="api_key_not_active"></a>API keys are designed to be used by any
  *  integrations you build. You should generate a key and then use it to make
  *  requests to the API and set the webhook URL for that integration. They do
  *  not expire, but can be disabled.
  */
class ApiKey extends Base
{
  
  /**
    *  Creates a new API key.
    *
    *  Example URL: /api_keys
    *  @return ApiKey
    **/
    public function create($options = array())
    {
        return $this->makeRequest('post', '/api_keys', $options);
    }

  /**
    *  Returns a
    *  [cursor-paginated](https://developer.gocardless.com/pro/#overview-cursor-pagination)
    *  list of your API keys.
    *
    *  Example URL: /api_keys
    *  @return ListResponse
    **/
    public function do_list($options = array())
    {
        return $this->makeRequest('get', '/api_keys', $options);
    }

  /**
    *  Retrieves the details of an existing API key.
    *
    *  Example URL: /api_keys/:identity
    *
    *  @param identity:  Unique identifier, beginning with "AK"
    *  @return ApiKey
    **/
    public function get($identity, $options = array())
    {
        $path = $this->subUrl('/api_keys/:identity', array(
            'identity' => $identity
        ));

        return $this->makeRequest('get', $path, $options);
    }

  /**
    *  Updates an API key. Only the `name` and `webhook_url` fields are
    *  supported.
    *
    *  Example URL: /api_keys/:identity
    *
    *  @param identity:  Unique identifier, beginning with "AK"
    *  @return ApiKey
    **/
    public function update($identity, $options = array())
    {
        $path = $this->subUrl('/api_keys/:identity', array(
            'identity' => $identity
        ));

        return $this->makeRequest('put', $path, $options);
    }

  /**
    *  Disables an API key. Once disabled, the API key will not be usable to
    *  authenticate any requests, and its `webhook_url` will not receive any
    *  more events.
    *
    *  Example URL: /api_keys/:identity/actions/disable
    *
    *  @param identity:  Unique identifier, beginning with "AK"
    *  @return ApiKey
    **/
    public function disable($identity, $options = array())
    {
        $path = $this->subUrl('/api_keys/:identity/actions/disable', array(
            'identity' => $identity
        ));

        return $this->makeRequest('post', $path, $options);
    }



  /**
    *  Returns a
    *  [cursor-paginated](https://developer.gocardless.com/pro/#overview-cursor-pagination)
    *  list of your API keys.
    *
    *  Example URL: /api_keys\
    *  @return Paginator
    **/
    public function all($listMax, $options = array())
    {
        return new Paginator($this, $listMax, $this->do_list($options), $options);
    }


   /**
    * Get the resource loading class.
    * Used internally to send http requests.
    *
    * @return string
    */
    protected function resourceClass()
    {
        return '\GoCardless\Resources\ApiKey';
    }

  /**
    *  Get the key the response object is enclosed in in JSON.
    *  Used internally to wrap and unwrap http requests.
    *
    *  @return string
    */
    protected function envelopeKey()
    {
        return 'api_keys';
    }
}
