<?php
/**
  * WARNING: Do not edit by hand, this file was generated by Crank:
  *
  * https://github.com/gocardless/crank
  */

namespace GoCardlessPro\Resources;

/**
  * Check whether an account number and bank / branch code combination are
  * compatible.
  */
class ModulusCheck extends Base
{



  /**
    * Array of [schemes](#mandates_scheme) supported for this bank account. This
    * will be an empty array for an unsuccessful modulus check.
    *
    * @return Wrapper\NestedArray
    */
    public function available_schemes()
    {
        $field = 'available_schemes';
        if (!property_exists($this->data, $field)) {
            return null;
        }
        return new Wrapper\NestedArray($field, $this->data->{$field});

    }

  /**
    * Array of errors encountered during modulus checking, structured like the
    * `errors` key in a `validation_failed` response - see
    * [errors](#overview-errors).
    *
    * @return Wrapper\NestedArray
    */
    public function errors()
    {
        $field = 'errors';
        if (!property_exists($this->data, $field)) {
            return null;
        }
        return new Wrapper\NestedArray($field, $this->data->{$field});

    }

  /**
    * Whether the modulus check was successful (i.e. whether the bank account
    * details provided were valid).
    *
    * @return bool
    */
    public function succeeded()
    {
        $field = 'succeeded';
        if (!property_exists($this->data, $field)) {
            return null;
        }
        return $this->data->{$field};
    }


  /**
    * Returns a string representation of the project.
    *
    * @return string 
    */
    public function __toString()
    {
        $ret = 'ModulusCheck Class (';
        $ret .= print_r($this->data, true);
        return $ret;
    }
}
